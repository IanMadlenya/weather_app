apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    signingConfigs {
        config {
            keyAlias 'weather-app'
            keyPassword '123456'
            storeFile file("$rootProject.projectDir/publish/keystore.jks")
            storePassword '123456'
        }
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.mirhoseini.weatherapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    appName: "@string/app_name",
            ]
            signingConfig signingConfigs.config
        }

        debug {
            manifestPlaceholders = [
                    appName: "@string/app_name_debug",
            ]
            applicationIdSuffix '.debug'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    // fixes espresso conflict with supportAnnotation new version
    configurations.all {
        resolutionStrategy {
            force rootProject.ext.testLibraries.supportAnnotations
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':core-lib')

    testCompile rootProject.ext.testLibraries.junit
    testCompile rootProject.ext.testLibraries.mockito
    testCompile rootProject.ext.testLibraries.robolectric

//    androidTestCompile rootProject.ext.testLibraries.supportAnnotations
//    androidTestCompile rootProject.ext.testLibraries.supportTestRunner
//    androidTestCompile rootProject.ext.testLibraries.supportTestRules
//    androidTestCompile rootProject.ext.testLibraries.hamcrest
    androidTestCompile rootProject.ext.testLibraries.espresso

    compile rootProject.ext.libraries.appCompat
    compile rootProject.ext.libraries.androidSupport
    compile rootProject.ext.libraries.vectorSupport
    compile rootProject.ext.libraries.recyclerView
    compile rootProject.ext.libraries.cardView
    compile rootProject.ext.libraries.designSupport

    compile rootProject.ext.libraries.rxandroid

    compile rootProject.ext.libraries.appSettings
    compile rootProject.ext.libraries.utils

    compile rootProject.ext.libraries.butterknife
    apt rootProject.ext.aptLibraries.butterknifeCompiler

    compile rootProject.ext.libraries.dagger
    apt rootProject.ext.aptLibraries.daggerCompiler

    compile rootProject.ext.libraries.timber

    compile rootProject.ext.libraries.stetho
    compile(rootProject.ext.libraries.stethoTimber) {
        exclude group: "com.jakewharton.timber", module: "timber"
    }
    compile(rootProject.ext.libraries.crashlytics) {
        transitive = true;
    }

    compile(rootProject.ext.libraries.answers) {
        transitive = true;
    }

}
